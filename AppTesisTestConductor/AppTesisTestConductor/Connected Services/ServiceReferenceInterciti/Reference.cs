//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceInterciti
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Admin : object
    {
        
        private string ApellidoField;
        
        private string CedulaField;
        
        private string CorreoField;
        
        private bool EstadoField;
        
        private System.DateTime FechaNacimientoField;
        
        private int IdAdminField;
        
        private string NombreField;
        
        private string PassField;
        
        private byte[] PictureField;
        
        private string TelefonoField;
        
        private string TokenExternalLoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido
        {
            get
            {
                return this.ApellidoField;
            }
            set
            {
                this.ApellidoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cedula
        {
            get
            {
                return this.CedulaField;
            }
            set
            {
                this.CedulaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo
        {
            get
            {
                return this.CorreoField;
            }
            set
            {
                this.CorreoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Estado
        {
            get
            {
                return this.EstadoField;
            }
            set
            {
                this.EstadoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaNacimiento
        {
            get
            {
                return this.FechaNacimientoField;
            }
            set
            {
                this.FechaNacimientoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAdmin
        {
            get
            {
                return this.IdAdminField;
            }
            set
            {
                this.IdAdminField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                return this.NombreField;
            }
            set
            {
                this.NombreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass
        {
            get
            {
                return this.PassField;
            }
            set
            {
                this.PassField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture
        {
            get
            {
                return this.PictureField;
            }
            set
            {
                this.PictureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono
        {
            get
            {
                return this.TelefonoField;
            }
            set
            {
                this.TelefonoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenExternalLogin
        {
            get
            {
                return this.TokenExternalLoginField;
            }
            set
            {
                this.TokenExternalLoginField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Cliente : object
    {
        
        private string ApellidoField;
        
        private string CedulaField;
        
        private string CorreoField;
        
        private System.DateTime FechaNacimientoField;
        
        private int IdClienteField;
        
        private string NombreField;
        
        private string PassField;
        
        private byte[] PictureField;
        
        private string TelefonoField;
        
        private string TokenExternalLoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido
        {
            get
            {
                return this.ApellidoField;
            }
            set
            {
                this.ApellidoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cedula
        {
            get
            {
                return this.CedulaField;
            }
            set
            {
                this.CedulaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo
        {
            get
            {
                return this.CorreoField;
            }
            set
            {
                this.CorreoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaNacimiento
        {
            get
            {
                return this.FechaNacimientoField;
            }
            set
            {
                this.FechaNacimientoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCliente
        {
            get
            {
                return this.IdClienteField;
            }
            set
            {
                this.IdClienteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                return this.NombreField;
            }
            set
            {
                this.NombreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass
        {
            get
            {
                return this.PassField;
            }
            set
            {
                this.PassField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture
        {
            get
            {
                return this.PictureField;
            }
            set
            {
                this.PictureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono
        {
            get
            {
                return this.TelefonoField;
            }
            set
            {
                this.TelefonoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenExternalLogin
        {
            get
            {
                return this.TokenExternalLoginField;
            }
            set
            {
                this.TokenExternalLoginField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Conductor", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Conductor : object
    {
        
        private string ApellidoField;
        
        private string CedulaField;
        
        private string CorreoField;
        
        private bool EstadoConductorField;
        
        private System.DateTime FechaNacimientoField;
        
        private int IdConductorField;
        
        private string NombreField;
        
        private string PassField;
        
        private byte[] PictureField;
        
        private string TelefonoField;
        
        private string TokenExternalLoginField;
        
        private ServiceReferenceInterciti.Vehiculo VehiculoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido
        {
            get
            {
                return this.ApellidoField;
            }
            set
            {
                this.ApellidoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cedula
        {
            get
            {
                return this.CedulaField;
            }
            set
            {
                this.CedulaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo
        {
            get
            {
                return this.CorreoField;
            }
            set
            {
                this.CorreoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EstadoConductor
        {
            get
            {
                return this.EstadoConductorField;
            }
            set
            {
                this.EstadoConductorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaNacimiento
        {
            get
            {
                return this.FechaNacimientoField;
            }
            set
            {
                this.FechaNacimientoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdConductor
        {
            get
            {
                return this.IdConductorField;
            }
            set
            {
                this.IdConductorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                return this.NombreField;
            }
            set
            {
                this.NombreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pass
        {
            get
            {
                return this.PassField;
            }
            set
            {
                this.PassField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture
        {
            get
            {
                return this.PictureField;
            }
            set
            {
                this.PictureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono
        {
            get
            {
                return this.TelefonoField;
            }
            set
            {
                this.TelefonoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenExternalLogin
        {
            get
            {
                return this.TokenExternalLoginField;
            }
            set
            {
                this.TokenExternalLoginField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceInterciti.Vehiculo Vehiculo
        {
            get
            {
                return this.VehiculoField;
            }
            set
            {
                this.VehiculoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehiculo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Vehiculo : object
    {
        
        private string Año1Field;
        
        private int IdVehiculoField;
        
        private string Modelo1Field;
        
        private byte[] PictureField;
        
        private string PlacaField;
        
        private string Tipo1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Año1
        {
            get
            {
                return this.Año1Field;
            }
            set
            {
                this.Año1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVehiculo
        {
            get
            {
                return this.IdVehiculoField;
            }
            set
            {
                this.IdVehiculoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modelo1
        {
            get
            {
                return this.Modelo1Field;
            }
            set
            {
                this.Modelo1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture
        {
            get
            {
                return this.PictureField;
            }
            set
            {
                this.PictureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Placa
        {
            get
            {
                return this.PlacaField;
            }
            set
            {
                this.PlacaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo1
        {
            get
            {
                return this.Tipo1Field;
            }
            set
            {
                this.Tipo1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recorrido", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Recorrido : object
    {
        
        private int CalificacionField;
        
        private string ComentarioField;
        
        private string DestinoField;
        
        private int EstadoRecorridoField;
        
        private System.DateTime FechaRecorridoField;
        
        private ServiceReferenceInterciti.Cliente IdClienteField;
        
        private ServiceReferenceInterciti.Conductor IdConductorField;
        
        private int IdRecorridoField;
        
        private decimal LatitudDestinoField;
        
        private decimal LatitudOrigenField;
        
        private decimal LongitudDestinoField;
        
        private decimal LongitudOrigenField;
        
        private string OrigenField;
        
        private decimal ValorRecorridoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Calificacion
        {
            get
            {
                return this.CalificacionField;
            }
            set
            {
                this.CalificacionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comentario
        {
            get
            {
                return this.ComentarioField;
            }
            set
            {
                this.ComentarioField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destino
        {
            get
            {
                return this.DestinoField;
            }
            set
            {
                this.DestinoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstadoRecorrido
        {
            get
            {
                return this.EstadoRecorridoField;
            }
            set
            {
                this.EstadoRecorridoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRecorrido
        {
            get
            {
                return this.FechaRecorridoField;
            }
            set
            {
                this.FechaRecorridoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceInterciti.Cliente IdCliente
        {
            get
            {
                return this.IdClienteField;
            }
            set
            {
                this.IdClienteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceInterciti.Conductor IdConductor
        {
            get
            {
                return this.IdConductorField;
            }
            set
            {
                this.IdConductorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRecorrido
        {
            get
            {
                return this.IdRecorridoField;
            }
            set
            {
                this.IdRecorridoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LatitudDestino
        {
            get
            {
                return this.LatitudDestinoField;
            }
            set
            {
                this.LatitudDestinoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LatitudOrigen
        {
            get
            {
                return this.LatitudOrigenField;
            }
            set
            {
                this.LatitudOrigenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LongitudDestino
        {
            get
            {
                return this.LongitudDestinoField;
            }
            set
            {
                this.LongitudDestinoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LongitudOrigen
        {
            get
            {
                return this.LongitudOrigenField;
            }
            set
            {
                this.LongitudOrigenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origen
        {
            get
            {
                return this.OrigenField;
            }
            set
            {
                this.OrigenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValorRecorrido
        {
            get
            {
                return this.ValorRecorridoField;
            }
            set
            {
                this.ValorRecorridoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AñoVehiculo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class AñoVehiculo : object
    {
        
        private string AñoField;
        
        private int IdAñoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Año
        {
            get
            {
                return this.AñoField;
            }
            set
            {
                this.AñoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAño
        {
            get
            {
                return this.IdAñoField;
            }
            set
            {
                this.IdAñoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModeloVehiculo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ModeloVehiculo : object
    {
        
        private int IdMarcaField;
        
        private int IdModeloField;
        
        private string ModeloField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMarca
        {
            get
            {
                return this.IdMarcaField;
            }
            set
            {
                this.IdMarcaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdModelo
        {
            get
            {
                return this.IdModeloField;
            }
            set
            {
                this.IdModeloField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Modelo
        {
            get
            {
                return this.ModeloField;
            }
            set
            {
                this.ModeloField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MisUbicaciones", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class MisUbicaciones : object
    {
        
        private string DireccionField;
        
        private int IdCreadorField;
        
        private int IdUbicacionField;
        
        private decimal LatitudField;
        
        private decimal LongitudField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion
        {
            get
            {
                return this.DireccionField;
            }
            set
            {
                this.DireccionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCreador
        {
            get
            {
                return this.IdCreadorField;
            }
            set
            {
                this.IdCreadorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUbicacion
        {
            get
            {
                return this.IdUbicacionField;
            }
            set
            {
                this.IdUbicacionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitud
        {
            get
            {
                return this.LatitudField;
            }
            set
            {
                this.LatitudField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitud
        {
            get
            {
                return this.LongitudField;
            }
            set
            {
                this.LongitudField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TipoVehiculo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TipoVehiculo : object
    {
        
        private int IdTipoVehiculoField;
        
        private string TipoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTipoVehiculo
        {
            get
            {
                return this.IdTipoVehiculoField;
            }
            set
            {
                this.IdTipoVehiculoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo
        {
            get
            {
                return this.TipoField;
            }
            set
            {
                this.TipoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarcaVehiculo", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class MarcaVehiculo : object
    {
        
        private int IdMarcaField;
        
        private string MarcaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMarca
        {
            get
            {
                return this.IdMarcaField;
            }
            set
            {
                this.IdMarcaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marca
        {
            get
            {
                return this.MarcaField;
            }
            set
            {
                this.MarcaField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceInterciti.IService")]
    public interface IService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAdminByID", ReplyAction="http://tempuri.org/IService/FindAdminByIDResponse")]
        ServiceReferenceInterciti.Admin FindAdminByID(int ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAdminByID", ReplyAction="http://tempuri.org/IService/FindAdminByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Admin> FindAdminByIDAsync(int ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByCorreo", ReplyAction="http://tempuri.org/IService/FindClienteByCorreoResponse")]
        ServiceReferenceInterciti.Cliente FindClienteByCorreo(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByCorreo", ReplyAction="http://tempuri.org/IService/FindClienteByCorreoResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByCorreoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByTelefono", ReplyAction="http://tempuri.org/IService/FindClienteByTelefonoResponse")]
        ServiceReferenceInterciti.Cliente FindClienteByTelefono(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByTelefono", ReplyAction="http://tempuri.org/IService/FindClienteByTelefonoResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByTelefonoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByTelefono", ReplyAction="http://tempuri.org/IService/FindConductorByTelefonoResponse")]
        ServiceReferenceInterciti.Conductor FindConductorByTelefono(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByTelefono", ReplyAction="http://tempuri.org/IService/FindConductorByTelefonoResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByTelefonoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindRecorridoById", ReplyAction="http://tempuri.org/IService/FindRecorridoByIdResponse")]
        ServiceReferenceInterciti.Recorrido FindRecorridoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindRecorridoById", ReplyAction="http://tempuri.org/IService/FindRecorridoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Recorrido> FindRecorridoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindSolicitudRecorrido", ReplyAction="http://tempuri.org/IService/FindSolicitudRecorridoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> FindSolicitudRecorrido();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindSolicitudRecorrido", ReplyAction="http://tempuri.org/IService/FindSolicitudRecorridoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> FindSolicitudRecorridoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAñoVehiculoByIdAño", ReplyAction="http://tempuri.org/IService/FindAñoVehiculoByIdAñoResponse")]
        ServiceReferenceInterciti.AñoVehiculo FindAñoVehiculoByIdAño(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAñoVehiculoByIdAño", ReplyAction="http://tempuri.org/IService/FindAñoVehiculoByIdAñoResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.AñoVehiculo> FindAñoVehiculoByIdAñoAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindModeloVehiculoByModelo", ReplyAction="http://tempuri.org/IService/FindModeloVehiculoByModeloResponse")]
        ServiceReferenceInterciti.ModeloVehiculo FindModeloVehiculoByModelo(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindModeloVehiculoByModelo", ReplyAction="http://tempuri.org/IService/FindModeloVehiculoByModeloResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.ModeloVehiculo> FindModeloVehiculoByModeloAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTipoVehiculoByTipo", ReplyAction="http://tempuri.org/IService/FindTipoVehiculoByTipoResponse")]
        int FindTipoVehiculoByTipo(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTipoVehiculoByTipo", ReplyAction="http://tempuri.org/IService/FindTipoVehiculoByTipoResponse")]
        System.Threading.Tasks.Task<int> FindTipoVehiculoByTipoAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GenerarPass", ReplyAction="http://tempuri.org/IService/GenerarPassResponse")]
        string GenerarPass();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GenerarPass", ReplyAction="http://tempuri.org/IService/GenerarPassResponse")]
        System.Threading.Tasks.Task<string> GenerarPassAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarUbicaciones", ReplyAction="http://tempuri.org/IService/ListarUbicacionesResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones> ListarUbicaciones(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarUbicaciones", ReplyAction="http://tempuri.org/IService/ListarUbicacionesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones>> ListarUbicacionesAsync(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindUbicacionByNombre", ReplyAction="http://tempuri.org/IService/FindUbicacionByNombreResponse")]
        ServiceReferenceInterciti.MisUbicaciones FindUbicacionByNombre(string nombre, int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindUbicacionByNombre", ReplyAction="http://tempuri.org/IService/FindUbicacionByNombreResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.MisUbicaciones> FindUbicacionByNombreAsync(string nombre, int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindUbicacionByID", ReplyAction="http://tempuri.org/IService/FindUbicacionByIDResponse")]
        ServiceReferenceInterciti.MisUbicaciones FindUbicacionByID(int cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindUbicacionByID", ReplyAction="http://tempuri.org/IService/FindUbicacionByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.MisUbicaciones> FindUbicacionByIDAsync(int cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarUbicacionesTemporales", ReplyAction="http://tempuri.org/IService/EliminarUbicacionesTemporalesResponse")]
        int EliminarUbicacionesTemporales(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarUbicacionesTemporales", ReplyAction="http://tempuri.org/IService/EliminarUbicacionesTemporalesResponse")]
        System.Threading.Tasks.Task<int> EliminarUbicacionesTemporalesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRecorridos", ReplyAction="http://tempuri.org/IService/GetRecorridosResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> GetRecorridos(int op);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRecorridos", ReplyAction="http://tempuri.org/IService/GetRecorridosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> GetRecorridosAsync(int op);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarUbicaciones", ReplyAction="http://tempuri.org/IService/AgregarUbicacionesResponse")]
        int AgregarUbicaciones(decimal lat, decimal lng, int idCreador, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarUbicaciones", ReplyAction="http://tempuri.org/IService/AgregarUbicacionesResponse")]
        System.Threading.Tasks.Task<int> AgregarUbicacionesAsync(decimal lat, decimal lng, int idCreador, string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindRecorridosByCliente", ReplyAction="http://tempuri.org/IService/FindRecorridosByClienteResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> FindRecorridosByCliente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindRecorridosByCliente", ReplyAction="http://tempuri.org/IService/FindRecorridosByClienteResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> FindRecorridosByClienteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindRecorridosByConductor", ReplyAction="http://tempuri.org/IService/FindRecorridosByConductorResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> FindRecorridosByConductor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindRecorridosByConductor", ReplyAction="http://tempuri.org/IService/FindRecorridosByConductorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> FindRecorridosByConductorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SenMail", ReplyAction="http://tempuri.org/IService/SenMailResponse")]
        bool SenMail(string to, string asunto, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SenMail", ReplyAction="http://tempuri.org/IService/SenMailResponse")]
        System.Threading.Tasks.Task<bool> SenMailAsync(string to, string asunto, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarUbicaciones", ReplyAction="http://tempuri.org/IService/BuscarUbicacionesResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones> BuscarUbicaciones(int idCliente, string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarUbicaciones", ReplyAction="http://tempuri.org/IService/BuscarUbicacionesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones>> BuscarUbicacionesAsync(int idCliente, string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarVehiculo", ReplyAction="http://tempuri.org/IService/BuscarVehiculoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo> BuscarVehiculo(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarVehiculo", ReplyAction="http://tempuri.org/IService/BuscarVehiculoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo>> BuscarVehiculoAsync(string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarRecorrido", ReplyAction="http://tempuri.org/IService/BuscarRecorridoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> BuscarRecorrido(int idCliente, string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarRecorrido", ReplyAction="http://tempuri.org/IService/BuscarRecorridoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> BuscarRecorridoAsync(int idCliente, string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarRecorridoCo", ReplyAction="http://tempuri.org/IService/BuscarRecorridoCoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> BuscarRecorridoCo(int idConductor, string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BuscarRecorridoCo", ReplyAction="http://tempuri.org/IService/BuscarRecorridoCoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> BuscarRecorridoCoAsync(int idConductor, string texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarUbicaciones", ReplyAction="http://tempuri.org/IService/EliminarUbicacionesResponse")]
        int EliminarUbicaciones(int idConductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarUbicaciones", ReplyAction="http://tempuri.org/IService/EliminarUbicacionesResponse")]
        System.Threading.Tasks.Task<int> EliminarUbicacionesAsync(int idConductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarUbicaciones", ReplyAction="http://tempuri.org/IService/ActualizarUbicacionesResponse")]
        int ActualizarUbicaciones(ServiceReferenceInterciti.MisUbicaciones conductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarUbicaciones", ReplyAction="http://tempuri.org/IService/ActualizarUbicacionesResponse")]
        System.Threading.Tasks.Task<int> ActualizarUbicacionesAsync(ServiceReferenceInterciti.MisUbicaciones conductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindMarcaVehiculoByMarca", ReplyAction="http://tempuri.org/IService/FindMarcaVehiculoByMarcaResponse")]
        int FindMarcaVehiculoByMarca(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindMarcaVehiculoByMarca", ReplyAction="http://tempuri.org/IService/FindMarcaVehiculoByMarcaResponse")]
        System.Threading.Tasks.Task<int> FindMarcaVehiculoByMarcaAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByMail", ReplyAction="http://tempuri.org/IService/FindConductorByMailResponse")]
        ServiceReferenceInterciti.Conductor FindConductorByMail(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByMail", ReplyAction="http://tempuri.org/IService/FindConductorByMailResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByMailAsync(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarCliente", ReplyAction="http://tempuri.org/IService/AgregarClienteResponse")]
        int AgregarCliente(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, string token, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarCliente", ReplyAction="http://tempuri.org/IService/AgregarClienteResponse")]
        System.Threading.Tasks.Task<int> AgregarClienteAsync(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, string token, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarClientes", ReplyAction="http://tempuri.org/IService/ListarClientesResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Cliente> ListarClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarClientes", ReplyAction="http://tempuri.org/IService/ListarClientesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Cliente>> ListarClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarCliente", ReplyAction="http://tempuri.org/IService/EliminarClienteResponse")]
        int EliminarCliente(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarCliente", ReplyAction="http://tempuri.org/IService/EliminarClienteResponse")]
        System.Threading.Tasks.Task<int> EliminarClienteAsync(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarCliente", ReplyAction="http://tempuri.org/IService/ActualizarClienteResponse")]
        int ActualizarCliente(ServiceReferenceInterciti.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarCliente", ReplyAction="http://tempuri.org/IService/ActualizarClienteResponse")]
        System.Threading.Tasks.Task<int> ActualizarClienteAsync(ServiceReferenceInterciti.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarConductores", ReplyAction="http://tempuri.org/IService/AgregarConductoresResponse")]
        int AgregarConductores(string nombre, string pass, int idVehiculo, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarConductores", ReplyAction="http://tempuri.org/IService/AgregarConductoresResponse")]
        System.Threading.Tasks.Task<int> AgregarConductoresAsync(string nombre, string pass, int idVehiculo, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarConductores", ReplyAction="http://tempuri.org/IService/ListarConductoresResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Conductor> ListarConductores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarConductores", ReplyAction="http://tempuri.org/IService/ListarConductoresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Conductor>> ListarConductoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarConductor", ReplyAction="http://tempuri.org/IService/EliminarConductorResponse")]
        int EliminarConductor(int idConductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarConductor", ReplyAction="http://tempuri.org/IService/EliminarConductorResponse")]
        System.Threading.Tasks.Task<int> EliminarConductorAsync(int idConductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarConductor", ReplyAction="http://tempuri.org/IService/ActualizarConductorResponse")]
        int ActualizarConductor(ServiceReferenceInterciti.Conductor conductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarConductor", ReplyAction="http://tempuri.org/IService/ActualizarConductorResponse")]
        System.Threading.Tasks.Task<int> ActualizarConductorAsync(ServiceReferenceInterciti.Conductor conductor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarAdmin", ReplyAction="http://tempuri.org/IService/AgregarAdminResponse")]
        int AgregarAdmin(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarAdmin", ReplyAction="http://tempuri.org/IService/AgregarAdminResponse")]
        System.Threading.Tasks.Task<int> AgregarAdminAsync(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarAdmin", ReplyAction="http://tempuri.org/IService/ListarAdminResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Admin> ListarAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarAdmin", ReplyAction="http://tempuri.org/IService/ListarAdminResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Admin>> ListarAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarAdmin", ReplyAction="http://tempuri.org/IService/EliminarAdminResponse")]
        int EliminarAdmin(int idAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarAdmin", ReplyAction="http://tempuri.org/IService/EliminarAdminResponse")]
        System.Threading.Tasks.Task<int> EliminarAdminAsync(int idAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarAdmin", ReplyAction="http://tempuri.org/IService/ActualizarAdminResponse")]
        int ActualizarAdmin(ServiceReferenceInterciti.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarAdmin", ReplyAction="http://tempuri.org/IService/ActualizarAdminResponse")]
        System.Threading.Tasks.Task<int> ActualizarAdminAsync(ServiceReferenceInterciti.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarTipo", ReplyAction="http://tempuri.org/IService/ActualizarTipoResponse")]
        int ActualizarTipo(ServiceReferenceInterciti.TipoVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarTipo", ReplyAction="http://tempuri.org/IService/ActualizarTipoResponse")]
        System.Threading.Tasks.Task<int> ActualizarTipoAsync(ServiceReferenceInterciti.TipoVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarModelo", ReplyAction="http://tempuri.org/IService/ActualizarModeloResponse")]
        int ActualizarModelo(ServiceReferenceInterciti.ModeloVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarModelo", ReplyAction="http://tempuri.org/IService/ActualizarModeloResponse")]
        System.Threading.Tasks.Task<int> ActualizarModeloAsync(ServiceReferenceInterciti.ModeloVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarMarca", ReplyAction="http://tempuri.org/IService/ActualizarMarcaResponse")]
        int ActualizarMarca(ServiceReferenceInterciti.MarcaVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarMarca", ReplyAction="http://tempuri.org/IService/ActualizarMarcaResponse")]
        System.Threading.Tasks.Task<int> ActualizarMarcaAsync(ServiceReferenceInterciti.MarcaVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarAnio", ReplyAction="http://tempuri.org/IService/ActualizarAnioResponse")]
        int ActualizarAnio(ServiceReferenceInterciti.AñoVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarAnio", ReplyAction="http://tempuri.org/IService/ActualizarAnioResponse")]
        System.Threading.Tasks.Task<int> ActualizarAnioAsync(ServiceReferenceInterciti.AñoVehiculo admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarVehiculo", ReplyAction="http://tempuri.org/IService/AgregarVehiculoResponse")]
        int AgregarVehiculo(string placa, int tipo, int modelo, int año, int marca, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarVehiculo", ReplyAction="http://tempuri.org/IService/AgregarVehiculoResponse")]
        System.Threading.Tasks.Task<int> AgregarVehiculoAsync(string placa, int tipo, int modelo, int año, int marca, byte[] pic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarVehiculo", ReplyAction="http://tempuri.org/IService/ListarVehiculoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo> ListarVehiculo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarVehiculo", ReplyAction="http://tempuri.org/IService/ListarVehiculoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo>> ListarVehiculoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarVehiculo", ReplyAction="http://tempuri.org/IService/EliminarVehiculoResponse")]
        int EliminarVehiculo(int idVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarVehiculo", ReplyAction="http://tempuri.org/IService/EliminarVehiculoResponse")]
        System.Threading.Tasks.Task<int> EliminarVehiculoAsync(int idVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarVehiculo", ReplyAction="http://tempuri.org/IService/ActualizarVehiculoResponse")]
        int ActualizarVehiculo(ServiceReferenceInterciti.Vehiculo vehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarVehiculo", ReplyAction="http://tempuri.org/IService/ActualizarVehiculoResponse")]
        System.Threading.Tasks.Task<int> ActualizarVehiculoAsync(ServiceReferenceInterciti.Vehiculo vehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarRecorrido", ReplyAction="http://tempuri.org/IService/ListarRecorridoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> ListarRecorrido();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarRecorrido", ReplyAction="http://tempuri.org/IService/ListarRecorridoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> ListarRecorridoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarRecorrido", ReplyAction="http://tempuri.org/IService/AgregarRecorridoResponse")]
        int AgregarRecorrido(decimal latitudOrigen, decimal longitudOrigen, decimal longitudDestino, decimal latitudDestino, System.DateTime fechaRecorrido, decimal valorRecorrido, System.Nullable<int> idConductor, int idCliente, int estado, int calif, string comentario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarRecorrido", ReplyAction="http://tempuri.org/IService/AgregarRecorridoResponse")]
        System.Threading.Tasks.Task<int> AgregarRecorridoAsync(decimal latitudOrigen, decimal longitudOrigen, decimal longitudDestino, decimal latitudDestino, System.DateTime fechaRecorrido, decimal valorRecorrido, System.Nullable<int> idConductor, int idCliente, int estado, int calif, string comentario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarRecorrido", ReplyAction="http://tempuri.org/IService/EliminarRecorridoResponse")]
        int EliminarRecorrido(int idRecorrido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarRecorrido", ReplyAction="http://tempuri.org/IService/EliminarRecorridoResponse")]
        System.Threading.Tasks.Task<int> EliminarRecorridoAsync(int idRecorrido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarRecorrido", ReplyAction="http://tempuri.org/IService/ActualizarRecorridoResponse")]
        int ActualizarRecorrido(ServiceReferenceInterciti.Recorrido recorrido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarRecorrido", ReplyAction="http://tempuri.org/IService/ActualizarRecorridoResponse")]
        System.Threading.Tasks.Task<int> ActualizarRecorridoAsync(ServiceReferenceInterciti.Recorrido recorrido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByID", ReplyAction="http://tempuri.org/IService/FindClienteByIDResponse")]
        ServiceReferenceInterciti.Cliente FindClienteByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByID", ReplyAction="http://tempuri.org/IService/FindClienteByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/sha512_hash", ReplyAction="http://tempuri.org/IService/sha512_hashResponse")]
        string sha512_hash(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/sha512_hash", ReplyAction="http://tempuri.org/IService/sha512_hashResponse")]
        System.Threading.Tasks.Task<string> sha512_hashAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/sha256_hash", ReplyAction="http://tempuri.org/IService/sha256_hashResponse")]
        string sha256_hash(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/sha256_hash", ReplyAction="http://tempuri.org/IService/sha256_hashResponse")]
        System.Threading.Tasks.Task<string> sha256_hashAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByCI", ReplyAction="http://tempuri.org/IService/FindConductorByCIResponse")]
        ServiceReferenceInterciti.Conductor FindConductorByCI(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByCI", ReplyAction="http://tempuri.org/IService/FindConductorByCIResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByCIAsync(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByID", ReplyAction="http://tempuri.org/IService/FindConductorByIDResponse")]
        ServiceReferenceInterciti.Conductor FindConductorByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindConductorByID", ReplyAction="http://tempuri.org/IService/FindConductorByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindVehiculoByID", ReplyAction="http://tempuri.org/IService/FindVehiculoByIDResponse")]
        ServiceReferenceInterciti.Vehiculo FindVehiculoByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindVehiculoByID", ReplyAction="http://tempuri.org/IService/FindVehiculoByIDResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Vehiculo> FindVehiculoByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarTipoVehiculo", ReplyAction="http://tempuri.org/IService/AgregarTipoVehiculoResponse")]
        int AgregarTipoVehiculo(string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarTipoVehiculo", ReplyAction="http://tempuri.org/IService/AgregarTipoVehiculoResponse")]
        System.Threading.Tasks.Task<int> AgregarTipoVehiculoAsync(string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarTipoVehiculo", ReplyAction="http://tempuri.org/IService/ListarTipoVehiculoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.TipoVehiculo> ListarTipoVehiculo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarTipoVehiculo", ReplyAction="http://tempuri.org/IService/ListarTipoVehiculoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.TipoVehiculo>> ListarTipoVehiculoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarTipoVehiculo", ReplyAction="http://tempuri.org/IService/EliminarTipoVehiculoResponse")]
        int EliminarTipoVehiculo(int idTipoVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarTipoVehiculo", ReplyAction="http://tempuri.org/IService/EliminarTipoVehiculoResponse")]
        System.Threading.Tasks.Task<int> EliminarTipoVehiculoAsync(int idTipoVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarMarcaVehiculo", ReplyAction="http://tempuri.org/IService/ListarMarcaVehiculoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.MarcaVehiculo> ListarMarcaVehiculo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarMarcaVehiculo", ReplyAction="http://tempuri.org/IService/ListarMarcaVehiculoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.MarcaVehiculo>> ListarMarcaVehiculoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarMarcaVehiculo", ReplyAction="http://tempuri.org/IService/EliminarMarcaVehiculoResponse")]
        int EliminarMarcaVehiculo(int idMarcaVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarMarcaVehiculo", ReplyAction="http://tempuri.org/IService/EliminarMarcaVehiculoResponse")]
        System.Threading.Tasks.Task<int> EliminarMarcaVehiculoAsync(int idMarcaVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarAñoVehiculo", ReplyAction="http://tempuri.org/IService/AgregarAñoVehiculoResponse")]
        int AgregarAñoVehiculo(string año);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarAñoVehiculo", ReplyAction="http://tempuri.org/IService/AgregarAñoVehiculoResponse")]
        System.Threading.Tasks.Task<int> AgregarAñoVehiculoAsync(string año);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarAnioVehiculo", ReplyAction="http://tempuri.org/IService/ListarAnioVehiculoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.AñoVehiculo> ListarAnioVehiculo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarAnioVehiculo", ReplyAction="http://tempuri.org/IService/ListarAnioVehiculoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.AñoVehiculo>> ListarAnioVehiculoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarAñoVehiculo", ReplyAction="http://tempuri.org/IService/EliminarAñoVehiculoResponse")]
        int EliminarAñoVehiculo(int idÁñoVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarAñoVehiculo", ReplyAction="http://tempuri.org/IService/EliminarAñoVehiculoResponse")]
        System.Threading.Tasks.Task<int> EliminarAñoVehiculoAsync(int idÁñoVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarModeloVehiculo", ReplyAction="http://tempuri.org/IService/AgregarModeloVehiculoResponse")]
        int AgregarModeloVehiculo(string año, int idMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarModeloVehiculo", ReplyAction="http://tempuri.org/IService/AgregarModeloVehiculoResponse")]
        System.Threading.Tasks.Task<int> AgregarModeloVehiculoAsync(string año, int idMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarMarcaVehiculo", ReplyAction="http://tempuri.org/IService/AgregarMarcaVehiculoResponse")]
        int AgregarMarcaVehiculo(string marca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgregarMarcaVehiculo", ReplyAction="http://tempuri.org/IService/AgregarMarcaVehiculoResponse")]
        System.Threading.Tasks.Task<int> AgregarMarcaVehiculoAsync(string marca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarModeloVehiculo", ReplyAction="http://tempuri.org/IService/ListarModeloVehiculoResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo> ListarModeloVehiculo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListarModeloVehiculo", ReplyAction="http://tempuri.org/IService/ListarModeloVehiculoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo>> ListarModeloVehiculoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarModeloVehiculo", ReplyAction="http://tempuri.org/IService/EliminarModeloVehiculoResponse")]
        int EliminarModeloVehiculo(int idÁñoVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EliminarModeloVehiculo", ReplyAction="http://tempuri.org/IService/EliminarModeloVehiculoResponse")]
        System.Threading.Tasks.Task<int> EliminarModeloVehiculoAsync(int idÁñoVehiculo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTipoVehiculoById", ReplyAction="http://tempuri.org/IService/FindTipoVehiculoByIdResponse")]
        ServiceReferenceInterciti.TipoVehiculo FindTipoVehiculoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindTipoVehiculoById", ReplyAction="http://tempuri.org/IService/FindTipoVehiculoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.TipoVehiculo> FindTipoVehiculoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAñoVehiculoById", ReplyAction="http://tempuri.org/IService/FindAñoVehiculoByIdResponse")]
        ServiceReferenceInterciti.AñoVehiculo FindAñoVehiculoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAñoVehiculoById", ReplyAction="http://tempuri.org/IService/FindAñoVehiculoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.AñoVehiculo> FindAñoVehiculoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindMarcaVehiculoById", ReplyAction="http://tempuri.org/IService/FindMarcaVehiculoByIdResponse")]
        ServiceReferenceInterciti.MarcaVehiculo FindMarcaVehiculoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindMarcaVehiculoById", ReplyAction="http://tempuri.org/IService/FindMarcaVehiculoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.MarcaVehiculo> FindMarcaVehiculoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindModeloVehiculoById", ReplyAction="http://tempuri.org/IService/FindModeloVehiculoByIdResponse")]
        ServiceReferenceInterciti.ModeloVehiculo FindModeloVehiculoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindModeloVehiculoById", ReplyAction="http://tempuri.org/IService/FindModeloVehiculoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.ModeloVehiculo> FindModeloVehiculoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindModeloVehiculoByMarca", ReplyAction="http://tempuri.org/IService/FindModeloVehiculoByMarcaResponse")]
        System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo> FindModeloVehiculoByMarca(int idMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindModeloVehiculoByMarca", ReplyAction="http://tempuri.org/IService/FindModeloVehiculoByMarcaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo>> FindModeloVehiculoByMarcaAsync(int idMarca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByCI", ReplyAction="http://tempuri.org/IService/FindClienteByCIResponse")]
        ServiceReferenceInterciti.Cliente FindClienteByCI(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClienteByCI", ReplyAction="http://tempuri.org/IService/FindClienteByCIResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByCIAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAdminByCI", ReplyAction="http://tempuri.org/IService/FindAdminByCIResponse")]
        ServiceReferenceInterciti.Admin FindAdminByCI(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAdminByCI", ReplyAction="http://tempuri.org/IService/FindAdminByCIResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Admin> FindAdminByCIAsync(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAdminByCorreo", ReplyAction="http://tempuri.org/IService/FindAdminByCorreoResponse")]
        ServiceReferenceInterciti.Admin FindAdminByCorreo(string ci);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindAdminByCorreo", ReplyAction="http://tempuri.org/IService/FindAdminByCorreoResponse")]
        System.Threading.Tasks.Task<ServiceReferenceInterciti.Admin> FindAdminByCorreoAsync(string ci);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IServiceChannel : ServiceReferenceInterciti.IService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ServiceReferenceInterciti.IService>, ServiceReferenceInterciti.IService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReferenceInterciti.Admin FindAdminByID(int ci)
        {
            return base.Channel.FindAdminByID(ci);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Admin> FindAdminByIDAsync(int ci)
        {
            return base.Channel.FindAdminByIDAsync(ci);
        }
        
        public ServiceReferenceInterciti.Cliente FindClienteByCorreo(string correo)
        {
            return base.Channel.FindClienteByCorreo(correo);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByCorreoAsync(string correo)
        {
            return base.Channel.FindClienteByCorreoAsync(correo);
        }
        
        public ServiceReferenceInterciti.Cliente FindClienteByTelefono(string correo)
        {
            return base.Channel.FindClienteByTelefono(correo);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByTelefonoAsync(string correo)
        {
            return base.Channel.FindClienteByTelefonoAsync(correo);
        }
        
        public ServiceReferenceInterciti.Conductor FindConductorByTelefono(string correo)
        {
            return base.Channel.FindConductorByTelefono(correo);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByTelefonoAsync(string correo)
        {
            return base.Channel.FindConductorByTelefonoAsync(correo);
        }
        
        public ServiceReferenceInterciti.Recorrido FindRecorridoById(int id)
        {
            return base.Channel.FindRecorridoById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Recorrido> FindRecorridoByIdAsync(int id)
        {
            return base.Channel.FindRecorridoByIdAsync(id);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> FindSolicitudRecorrido()
        {
            return base.Channel.FindSolicitudRecorrido();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> FindSolicitudRecorridoAsync()
        {
            return base.Channel.FindSolicitudRecorridoAsync();
        }
        
        public ServiceReferenceInterciti.AñoVehiculo FindAñoVehiculoByIdAño(string id)
        {
            return base.Channel.FindAñoVehiculoByIdAño(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.AñoVehiculo> FindAñoVehiculoByIdAñoAsync(string id)
        {
            return base.Channel.FindAñoVehiculoByIdAñoAsync(id);
        }
        
        public ServiceReferenceInterciti.ModeloVehiculo FindModeloVehiculoByModelo(string nombre)
        {
            return base.Channel.FindModeloVehiculoByModelo(nombre);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.ModeloVehiculo> FindModeloVehiculoByModeloAsync(string nombre)
        {
            return base.Channel.FindModeloVehiculoByModeloAsync(nombre);
        }
        
        public int FindTipoVehiculoByTipo(string id)
        {
            return base.Channel.FindTipoVehiculoByTipo(id);
        }
        
        public System.Threading.Tasks.Task<int> FindTipoVehiculoByTipoAsync(string id)
        {
            return base.Channel.FindTipoVehiculoByTipoAsync(id);
        }
        
        public string GenerarPass()
        {
            return base.Channel.GenerarPass();
        }
        
        public System.Threading.Tasks.Task<string> GenerarPassAsync()
        {
            return base.Channel.GenerarPassAsync();
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones> ListarUbicaciones(int idCliente)
        {
            return base.Channel.ListarUbicaciones(idCliente);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones>> ListarUbicacionesAsync(int idCliente)
        {
            return base.Channel.ListarUbicacionesAsync(idCliente);
        }
        
        public ServiceReferenceInterciti.MisUbicaciones FindUbicacionByNombre(string nombre, int idCliente)
        {
            return base.Channel.FindUbicacionByNombre(nombre, idCliente);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.MisUbicaciones> FindUbicacionByNombreAsync(string nombre, int idCliente)
        {
            return base.Channel.FindUbicacionByNombreAsync(nombre, idCliente);
        }
        
        public ServiceReferenceInterciti.MisUbicaciones FindUbicacionByID(int cedula)
        {
            return base.Channel.FindUbicacionByID(cedula);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.MisUbicaciones> FindUbicacionByIDAsync(int cedula)
        {
            return base.Channel.FindUbicacionByIDAsync(cedula);
        }
        
        public int EliminarUbicacionesTemporales(int id)
        {
            return base.Channel.EliminarUbicacionesTemporales(id);
        }
        
        public System.Threading.Tasks.Task<int> EliminarUbicacionesTemporalesAsync(int id)
        {
            return base.Channel.EliminarUbicacionesTemporalesAsync(id);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> GetRecorridos(int op)
        {
            return base.Channel.GetRecorridos(op);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> GetRecorridosAsync(int op)
        {
            return base.Channel.GetRecorridosAsync(op);
        }
        
        public int AgregarUbicaciones(decimal lat, decimal lng, int idCreador, string nombre)
        {
            return base.Channel.AgregarUbicaciones(lat, lng, idCreador, nombre);
        }
        
        public System.Threading.Tasks.Task<int> AgregarUbicacionesAsync(decimal lat, decimal lng, int idCreador, string nombre)
        {
            return base.Channel.AgregarUbicacionesAsync(lat, lng, idCreador, nombre);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> FindRecorridosByCliente(int id)
        {
            return base.Channel.FindRecorridosByCliente(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> FindRecorridosByClienteAsync(int id)
        {
            return base.Channel.FindRecorridosByClienteAsync(id);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> FindRecorridosByConductor(int id)
        {
            return base.Channel.FindRecorridosByConductor(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> FindRecorridosByConductorAsync(int id)
        {
            return base.Channel.FindRecorridosByConductorAsync(id);
        }
        
        public bool SenMail(string to, string asunto, string mensaje)
        {
            return base.Channel.SenMail(to, asunto, mensaje);
        }
        
        public System.Threading.Tasks.Task<bool> SenMailAsync(string to, string asunto, string mensaje)
        {
            return base.Channel.SenMailAsync(to, asunto, mensaje);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones> BuscarUbicaciones(int idCliente, string texto)
        {
            return base.Channel.BuscarUbicaciones(idCliente, texto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.MisUbicaciones>> BuscarUbicacionesAsync(int idCliente, string texto)
        {
            return base.Channel.BuscarUbicacionesAsync(idCliente, texto);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo> BuscarVehiculo(string texto)
        {
            return base.Channel.BuscarVehiculo(texto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo>> BuscarVehiculoAsync(string texto)
        {
            return base.Channel.BuscarVehiculoAsync(texto);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> BuscarRecorrido(int idCliente, string texto)
        {
            return base.Channel.BuscarRecorrido(idCliente, texto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> BuscarRecorridoAsync(int idCliente, string texto)
        {
            return base.Channel.BuscarRecorridoAsync(idCliente, texto);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> BuscarRecorridoCo(int idConductor, string texto)
        {
            return base.Channel.BuscarRecorridoCo(idConductor, texto);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> BuscarRecorridoCoAsync(int idConductor, string texto)
        {
            return base.Channel.BuscarRecorridoCoAsync(idConductor, texto);
        }
        
        public int EliminarUbicaciones(int idConductor)
        {
            return base.Channel.EliminarUbicaciones(idConductor);
        }
        
        public System.Threading.Tasks.Task<int> EliminarUbicacionesAsync(int idConductor)
        {
            return base.Channel.EliminarUbicacionesAsync(idConductor);
        }
        
        public int ActualizarUbicaciones(ServiceReferenceInterciti.MisUbicaciones conductor)
        {
            return base.Channel.ActualizarUbicaciones(conductor);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarUbicacionesAsync(ServiceReferenceInterciti.MisUbicaciones conductor)
        {
            return base.Channel.ActualizarUbicacionesAsync(conductor);
        }
        
        public int FindMarcaVehiculoByMarca(string nombre)
        {
            return base.Channel.FindMarcaVehiculoByMarca(nombre);
        }
        
        public System.Threading.Tasks.Task<int> FindMarcaVehiculoByMarcaAsync(string nombre)
        {
            return base.Channel.FindMarcaVehiculoByMarcaAsync(nombre);
        }
        
        public ServiceReferenceInterciti.Conductor FindConductorByMail(string ci)
        {
            return base.Channel.FindConductorByMail(ci);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByMailAsync(string ci)
        {
            return base.Channel.FindConductorByMailAsync(ci);
        }
        
        public int AgregarCliente(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, string token, byte[] pic)
        {
            return base.Channel.AgregarCliente(nombre, pass, apellido, cedula, correo, telefono, fechaNacimiento, token, pic);
        }
        
        public System.Threading.Tasks.Task<int> AgregarClienteAsync(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, string token, byte[] pic)
        {
            return base.Channel.AgregarClienteAsync(nombre, pass, apellido, cedula, correo, telefono, fechaNacimiento, token, pic);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Cliente> ListarClientes()
        {
            return base.Channel.ListarClientes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Cliente>> ListarClientesAsync()
        {
            return base.Channel.ListarClientesAsync();
        }
        
        public int EliminarCliente(int idCliente)
        {
            return base.Channel.EliminarCliente(idCliente);
        }
        
        public System.Threading.Tasks.Task<int> EliminarClienteAsync(int idCliente)
        {
            return base.Channel.EliminarClienteAsync(idCliente);
        }
        
        public int ActualizarCliente(ServiceReferenceInterciti.Cliente cliente)
        {
            return base.Channel.ActualizarCliente(cliente);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarClienteAsync(ServiceReferenceInterciti.Cliente cliente)
        {
            return base.Channel.ActualizarClienteAsync(cliente);
        }
        
        public int AgregarConductores(string nombre, string pass, int idVehiculo, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic)
        {
            return base.Channel.AgregarConductores(nombre, pass, idVehiculo, apellido, cedula, correo, telefono, fechaNacimiento, estado, token, pic);
        }
        
        public System.Threading.Tasks.Task<int> AgregarConductoresAsync(string nombre, string pass, int idVehiculo, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic)
        {
            return base.Channel.AgregarConductoresAsync(nombre, pass, idVehiculo, apellido, cedula, correo, telefono, fechaNacimiento, estado, token, pic);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Conductor> ListarConductores()
        {
            return base.Channel.ListarConductores();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Conductor>> ListarConductoresAsync()
        {
            return base.Channel.ListarConductoresAsync();
        }
        
        public int EliminarConductor(int idConductor)
        {
            return base.Channel.EliminarConductor(idConductor);
        }
        
        public System.Threading.Tasks.Task<int> EliminarConductorAsync(int idConductor)
        {
            return base.Channel.EliminarConductorAsync(idConductor);
        }
        
        public int ActualizarConductor(ServiceReferenceInterciti.Conductor conductor)
        {
            return base.Channel.ActualizarConductor(conductor);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarConductorAsync(ServiceReferenceInterciti.Conductor conductor)
        {
            return base.Channel.ActualizarConductorAsync(conductor);
        }
        
        public int AgregarAdmin(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic)
        {
            return base.Channel.AgregarAdmin(nombre, pass, apellido, cedula, correo, telefono, fechaNacimiento, estado, token, pic);
        }
        
        public System.Threading.Tasks.Task<int> AgregarAdminAsync(string nombre, string pass, string apellido, string cedula, string correo, string telefono, System.DateTime fechaNacimiento, bool estado, string token, byte[] pic)
        {
            return base.Channel.AgregarAdminAsync(nombre, pass, apellido, cedula, correo, telefono, fechaNacimiento, estado, token, pic);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Admin> ListarAdmin()
        {
            return base.Channel.ListarAdmin();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Admin>> ListarAdminAsync()
        {
            return base.Channel.ListarAdminAsync();
        }
        
        public int EliminarAdmin(int idAdmin)
        {
            return base.Channel.EliminarAdmin(idAdmin);
        }
        
        public System.Threading.Tasks.Task<int> EliminarAdminAsync(int idAdmin)
        {
            return base.Channel.EliminarAdminAsync(idAdmin);
        }
        
        public int ActualizarAdmin(ServiceReferenceInterciti.Admin admin)
        {
            return base.Channel.ActualizarAdmin(admin);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarAdminAsync(ServiceReferenceInterciti.Admin admin)
        {
            return base.Channel.ActualizarAdminAsync(admin);
        }
        
        public int ActualizarTipo(ServiceReferenceInterciti.TipoVehiculo admin)
        {
            return base.Channel.ActualizarTipo(admin);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarTipoAsync(ServiceReferenceInterciti.TipoVehiculo admin)
        {
            return base.Channel.ActualizarTipoAsync(admin);
        }
        
        public int ActualizarModelo(ServiceReferenceInterciti.ModeloVehiculo admin)
        {
            return base.Channel.ActualizarModelo(admin);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarModeloAsync(ServiceReferenceInterciti.ModeloVehiculo admin)
        {
            return base.Channel.ActualizarModeloAsync(admin);
        }
        
        public int ActualizarMarca(ServiceReferenceInterciti.MarcaVehiculo admin)
        {
            return base.Channel.ActualizarMarca(admin);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarMarcaAsync(ServiceReferenceInterciti.MarcaVehiculo admin)
        {
            return base.Channel.ActualizarMarcaAsync(admin);
        }
        
        public int ActualizarAnio(ServiceReferenceInterciti.AñoVehiculo admin)
        {
            return base.Channel.ActualizarAnio(admin);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarAnioAsync(ServiceReferenceInterciti.AñoVehiculo admin)
        {
            return base.Channel.ActualizarAnioAsync(admin);
        }
        
        public int AgregarVehiculo(string placa, int tipo, int modelo, int año, int marca, byte[] pic)
        {
            return base.Channel.AgregarVehiculo(placa, tipo, modelo, año, marca, pic);
        }
        
        public System.Threading.Tasks.Task<int> AgregarVehiculoAsync(string placa, int tipo, int modelo, int año, int marca, byte[] pic)
        {
            return base.Channel.AgregarVehiculoAsync(placa, tipo, modelo, año, marca, pic);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo> ListarVehiculo()
        {
            return base.Channel.ListarVehiculo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Vehiculo>> ListarVehiculoAsync()
        {
            return base.Channel.ListarVehiculoAsync();
        }
        
        public int EliminarVehiculo(int idVehiculo)
        {
            return base.Channel.EliminarVehiculo(idVehiculo);
        }
        
        public System.Threading.Tasks.Task<int> EliminarVehiculoAsync(int idVehiculo)
        {
            return base.Channel.EliminarVehiculoAsync(idVehiculo);
        }
        
        public int ActualizarVehiculo(ServiceReferenceInterciti.Vehiculo vehiculo)
        {
            return base.Channel.ActualizarVehiculo(vehiculo);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarVehiculoAsync(ServiceReferenceInterciti.Vehiculo vehiculo)
        {
            return base.Channel.ActualizarVehiculoAsync(vehiculo);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido> ListarRecorrido()
        {
            return base.Channel.ListarRecorrido();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.Recorrido>> ListarRecorridoAsync()
        {
            return base.Channel.ListarRecorridoAsync();
        }
        
        public int AgregarRecorrido(decimal latitudOrigen, decimal longitudOrigen, decimal longitudDestino, decimal latitudDestino, System.DateTime fechaRecorrido, decimal valorRecorrido, System.Nullable<int> idConductor, int idCliente, int estado, int calif, string comentario)
        {
            return base.Channel.AgregarRecorrido(latitudOrigen, longitudOrigen, longitudDestino, latitudDestino, fechaRecorrido, valorRecorrido, idConductor, idCliente, estado, calif, comentario);
        }
        
        public System.Threading.Tasks.Task<int> AgregarRecorridoAsync(decimal latitudOrigen, decimal longitudOrigen, decimal longitudDestino, decimal latitudDestino, System.DateTime fechaRecorrido, decimal valorRecorrido, System.Nullable<int> idConductor, int idCliente, int estado, int calif, string comentario)
        {
            return base.Channel.AgregarRecorridoAsync(latitudOrigen, longitudOrigen, longitudDestino, latitudDestino, fechaRecorrido, valorRecorrido, idConductor, idCliente, estado, calif, comentario);
        }
        
        public int EliminarRecorrido(int idRecorrido)
        {
            return base.Channel.EliminarRecorrido(idRecorrido);
        }
        
        public System.Threading.Tasks.Task<int> EliminarRecorridoAsync(int idRecorrido)
        {
            return base.Channel.EliminarRecorridoAsync(idRecorrido);
        }
        
        public int ActualizarRecorrido(ServiceReferenceInterciti.Recorrido recorrido)
        {
            return base.Channel.ActualizarRecorrido(recorrido);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarRecorridoAsync(ServiceReferenceInterciti.Recorrido recorrido)
        {
            return base.Channel.ActualizarRecorridoAsync(recorrido);
        }
        
        public ServiceReferenceInterciti.Cliente FindClienteByID(int id)
        {
            return base.Channel.FindClienteByID(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByIDAsync(int id)
        {
            return base.Channel.FindClienteByIDAsync(id);
        }
        
        public string sha512_hash(string value)
        {
            return base.Channel.sha512_hash(value);
        }
        
        public System.Threading.Tasks.Task<string> sha512_hashAsync(string value)
        {
            return base.Channel.sha512_hashAsync(value);
        }
        
        public string sha256_hash(string value)
        {
            return base.Channel.sha256_hash(value);
        }
        
        public System.Threading.Tasks.Task<string> sha256_hashAsync(string value)
        {
            return base.Channel.sha256_hashAsync(value);
        }
        
        public ServiceReferenceInterciti.Conductor FindConductorByCI(string ci)
        {
            return base.Channel.FindConductorByCI(ci);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByCIAsync(string ci)
        {
            return base.Channel.FindConductorByCIAsync(ci);
        }
        
        public ServiceReferenceInterciti.Conductor FindConductorByID(int id)
        {
            return base.Channel.FindConductorByID(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Conductor> FindConductorByIDAsync(int id)
        {
            return base.Channel.FindConductorByIDAsync(id);
        }
        
        public ServiceReferenceInterciti.Vehiculo FindVehiculoByID(int id)
        {
            return base.Channel.FindVehiculoByID(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Vehiculo> FindVehiculoByIDAsync(int id)
        {
            return base.Channel.FindVehiculoByIDAsync(id);
        }
        
        public int AgregarTipoVehiculo(string tipo)
        {
            return base.Channel.AgregarTipoVehiculo(tipo);
        }
        
        public System.Threading.Tasks.Task<int> AgregarTipoVehiculoAsync(string tipo)
        {
            return base.Channel.AgregarTipoVehiculoAsync(tipo);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.TipoVehiculo> ListarTipoVehiculo()
        {
            return base.Channel.ListarTipoVehiculo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.TipoVehiculo>> ListarTipoVehiculoAsync()
        {
            return base.Channel.ListarTipoVehiculoAsync();
        }
        
        public int EliminarTipoVehiculo(int idTipoVehiculo)
        {
            return base.Channel.EliminarTipoVehiculo(idTipoVehiculo);
        }
        
        public System.Threading.Tasks.Task<int> EliminarTipoVehiculoAsync(int idTipoVehiculo)
        {
            return base.Channel.EliminarTipoVehiculoAsync(idTipoVehiculo);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.MarcaVehiculo> ListarMarcaVehiculo()
        {
            return base.Channel.ListarMarcaVehiculo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.MarcaVehiculo>> ListarMarcaVehiculoAsync()
        {
            return base.Channel.ListarMarcaVehiculoAsync();
        }
        
        public int EliminarMarcaVehiculo(int idMarcaVehiculo)
        {
            return base.Channel.EliminarMarcaVehiculo(idMarcaVehiculo);
        }
        
        public System.Threading.Tasks.Task<int> EliminarMarcaVehiculoAsync(int idMarcaVehiculo)
        {
            return base.Channel.EliminarMarcaVehiculoAsync(idMarcaVehiculo);
        }
        
        public int AgregarAñoVehiculo(string año)
        {
            return base.Channel.AgregarAñoVehiculo(año);
        }
        
        public System.Threading.Tasks.Task<int> AgregarAñoVehiculoAsync(string año)
        {
            return base.Channel.AgregarAñoVehiculoAsync(año);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.AñoVehiculo> ListarAnioVehiculo()
        {
            return base.Channel.ListarAnioVehiculo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.AñoVehiculo>> ListarAnioVehiculoAsync()
        {
            return base.Channel.ListarAnioVehiculoAsync();
        }
        
        public int EliminarAñoVehiculo(int idÁñoVehiculo)
        {
            return base.Channel.EliminarAñoVehiculo(idÁñoVehiculo);
        }
        
        public System.Threading.Tasks.Task<int> EliminarAñoVehiculoAsync(int idÁñoVehiculo)
        {
            return base.Channel.EliminarAñoVehiculoAsync(idÁñoVehiculo);
        }
        
        public int AgregarModeloVehiculo(string año, int idMarca)
        {
            return base.Channel.AgregarModeloVehiculo(año, idMarca);
        }
        
        public System.Threading.Tasks.Task<int> AgregarModeloVehiculoAsync(string año, int idMarca)
        {
            return base.Channel.AgregarModeloVehiculoAsync(año, idMarca);
        }
        
        public int AgregarMarcaVehiculo(string marca)
        {
            return base.Channel.AgregarMarcaVehiculo(marca);
        }
        
        public System.Threading.Tasks.Task<int> AgregarMarcaVehiculoAsync(string marca)
        {
            return base.Channel.AgregarMarcaVehiculoAsync(marca);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo> ListarModeloVehiculo()
        {
            return base.Channel.ListarModeloVehiculo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo>> ListarModeloVehiculoAsync()
        {
            return base.Channel.ListarModeloVehiculoAsync();
        }
        
        public int EliminarModeloVehiculo(int idÁñoVehiculo)
        {
            return base.Channel.EliminarModeloVehiculo(idÁñoVehiculo);
        }
        
        public System.Threading.Tasks.Task<int> EliminarModeloVehiculoAsync(int idÁñoVehiculo)
        {
            return base.Channel.EliminarModeloVehiculoAsync(idÁñoVehiculo);
        }
        
        public ServiceReferenceInterciti.TipoVehiculo FindTipoVehiculoById(int id)
        {
            return base.Channel.FindTipoVehiculoById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.TipoVehiculo> FindTipoVehiculoByIdAsync(int id)
        {
            return base.Channel.FindTipoVehiculoByIdAsync(id);
        }
        
        public ServiceReferenceInterciti.AñoVehiculo FindAñoVehiculoById(int id)
        {
            return base.Channel.FindAñoVehiculoById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.AñoVehiculo> FindAñoVehiculoByIdAsync(int id)
        {
            return base.Channel.FindAñoVehiculoByIdAsync(id);
        }
        
        public ServiceReferenceInterciti.MarcaVehiculo FindMarcaVehiculoById(int id)
        {
            return base.Channel.FindMarcaVehiculoById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.MarcaVehiculo> FindMarcaVehiculoByIdAsync(int id)
        {
            return base.Channel.FindMarcaVehiculoByIdAsync(id);
        }
        
        public ServiceReferenceInterciti.ModeloVehiculo FindModeloVehiculoById(int id)
        {
            return base.Channel.FindModeloVehiculoById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.ModeloVehiculo> FindModeloVehiculoByIdAsync(int id)
        {
            return base.Channel.FindModeloVehiculoByIdAsync(id);
        }
        
        public System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo> FindModeloVehiculoByMarca(int idMarca)
        {
            return base.Channel.FindModeloVehiculoByMarca(idMarca);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceInterciti.ModeloVehiculo>> FindModeloVehiculoByMarcaAsync(int idMarca)
        {
            return base.Channel.FindModeloVehiculoByMarcaAsync(idMarca);
        }
        
        public ServiceReferenceInterciti.Cliente FindClienteByCI(string cedula)
        {
            return base.Channel.FindClienteByCI(cedula);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Cliente> FindClienteByCIAsync(string cedula)
        {
            return base.Channel.FindClienteByCIAsync(cedula);
        }
        
        public ServiceReferenceInterciti.Admin FindAdminByCI(string ci)
        {
            return base.Channel.FindAdminByCI(ci);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Admin> FindAdminByCIAsync(string ci)
        {
            return base.Channel.FindAdminByCIAsync(ci);
        }
        
        public ServiceReferenceInterciti.Admin FindAdminByCorreo(string ci)
        {
            return base.Channel.FindAdminByCorreo(ci);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceInterciti.Admin> FindAdminByCorreoAsync(string ci)
        {
            return base.Channel.FindAdminByCorreoAsync(ci);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_IService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("http://wcfserviceappinterciti.azurewebsites.net/Service.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_IService))
            {
                return new System.ServiceModel.EndpointAddress("https://wcfserviceappinterciti.azurewebsites.net/Service.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService,
            
            BasicHttpsBinding_IService,
        }
    }
}
